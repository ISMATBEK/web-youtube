<!DOCTYPE html>
<html lang="uz">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Yuqori Sifatli Video Yuklovchi</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        /* Inter fontini yuklash */
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700;800&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #0f0f0f; /* YouTube Dark Mode foniga juda yaqin */
            color: #ffffff;
        }
        /* YouTube qizil rangini belgilash */
        .yt-red {
            background-color: #FF0000;
        }
        .yt-red:hover {
            background-color: #CC0000;
        }
        /* Kiritish maydonini Dark Mode ga moslash */
        #videoUrl {
            background-color: #1a1a1a;
            color: #ffffff;
            border-color: #3f3f3f;
        }
        #videoUrl:focus {
            border-color: #3ea6ff; /* Fokusda YouTube ko'ki */
            box-shadow: 0 0 0 1px #3ea6ff;
        }
        /* Progress bar stili */
        #progressBar {
            transition: width 0.3s ease-in-out;
        }
    </style>
</head>
<body class="min-h-screen flex items-center justify-center p-4">

    <!-- Asosiy Kontent Kartochkasi (Minimalistik, YouTube uslubida) -->
    <div id="app" class="w-full max-w-3xl bg-[#1f1f1f] rounded-xl p-8 md:p-12 shadow-2xl">

        <!-- Sarlavha va Katta Logo Qismi -->
        <header class="text-center mb-10">
            <!-- YouTube Logosi (Katta o'lchamda) -->
            <div class="flex items-center justify-center space-x-2 mb-4">
                <!-- YouTube Play Button SVG: Bu haqiqiy YouTube logotipiga eng yaqin versiya -->
                <svg viewBox="0 0 100 70" width="70" height="50" class="flex-shrink-0">
                    <rect x="0" y="0" width="100" height="70" rx="10" ry="10" fill="#FF0000"/>
                    <polygon points="38,15 38,55 75,35" fill="white"/>
                </svg>
                <h1 class="text-4xl font-extrabold text-white tracking-tight">
                    <span class="text-white">Video</span> <span class="text-red-600">Yuklovchi</span>
                </h1>
            </div>
            <p class="text-gray-400 text-lg mt-2">
                YouTube, Instagram va TikTok uchun maxsus yuqori aniqlikdagi fayl yuklash xizmati.
            </p>
        </header>

        <!-- URL Kiritish Formasi -->
        <div class="space-y-6">
            <input type="url" id="videoUrl"
                   placeholder="Videoga havolani shu yerga kiriting (URL)"
                   class="w-full p-4 text-base border-2 rounded-xl placeholder-gray-500 focus:outline-none transition duration-300"
                   required>

            <button id="downloadButton"
                    class="w-full yt-red text-white font-bold text-lg py-3 rounded-xl shadow-lg transition duration-200 hover:shadow-xl hover:scale-[1.01] disabled:opacity-50">
                📥 Yuklab Olishni Boshlash
            </button>
        </div>

        <!-- Progress Bar Qismi (Yangi Qo'shilgan) -->
        <div id="progressContainer" class="hidden mt-6 space-y-2">
            <p id="progressStatus" class="text-sm font-medium text-gray-400">Jarayon boshlanmoqda...</p>
            <div class="w-full bg-[#282828] rounded-full h-2.5">
                <div id="progressBar" class="bg-red-600 h-2.5 rounded-full" style="width: 0%"></div>
            </div>
        </div>

        <!-- Xabarnomalar va Natijalar maydoni -->
        <div id="messageArea" class="mt-8">
            <!-- Xabarlar shu yerda ko'rsatiladi -->
        </div>

        <!-- Natija Kartochkasi (Muvaffaqiyatli xabar uchun) -->
        <div id="resultCard" class="hidden mt-8 bg-[#282828] border-l-4 border-green-500 rounded-xl p-6 shadow-xl">
            <div class="flex flex-col space-y-4">
                <div class="flex items-center space-x-3">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-green-400 flex-shrink-0" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    <div>
                        <h3 class="text-xl font-semibold text-white" id="videoTitle">Video nomi</h3>
                        <p class="text-sm text-gray-400 mt-1">
                            Fayl serverimizda tayyor. To'g'ridan-to'g'ri yuklab olish uchun tugmani bosing.
                        </p>
                    </div>
                </div>

                <!-- Haqiqiy yuklab olish tugmasi -->
                <a id="finalDownloadLink"
                   href="#"
                   download="video-yuklandi.mp4"
                   target="_blank"
                   class="inline-flex justify-center items-center yt-red text-white font-semibold py-3 px-6 rounded-xl transition duration-200 hover:bg-red-700 shadow-md">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4" />
                    </svg>
                    Faylni Yuklab Olish
                </a>
            </div>
        </div>

        <!-- Footer -->
        <footer class="mt-12 pt-6 border-t border-gray-700 text-center">
            <p class="text-xs text-gray-600">
                © 2024. Barcha xizmatlar xavfsizlik va tezlikni ta'minlaydi.
            </p>
        </footer>
    </div>

    <script>
        // DOM elementlari
        const videoUrlInput = document.getElementById('videoUrl');
        const downloadButton = document.getElementById('downloadButton');
        const messageArea = document.getElementById('messageArea');
        const resultCard = document.getElementById('resultCard');
        const videoTitle = document.getElementById('videoTitle');
        const finalDownloadLink = document.getElementById('finalDownloadLink');

        const progressContainer = document.getElementById('progressContainer');
        const progressBar = document.getElementById('progressBar');
        const progressStatus = document.getElementById('progressStatus');

        // Ruxsat etilgan domenlar
        const ALLOWED_DOMAINS = ["youtube.com", "youtu.be", "instagram.com", "tiktok.com"];
        // API endpointlari endi ikkita: vazifani boshlash va statusni tekshirish
        const START_TASK_ENDPOINT = '/start_download';
        const CHECK_STATUS_ENDPOINT = '/check_status';


        /**
         * Havolaning asosiy domenini olish funksiyasi.
         * @param {string} url - Kiritilgan URL
         * @returns {string} Asosiy domen.
         */
        function getBaseDomain(url) {
            try {
                const netloc = new URL(url).hostname;
                if (netloc.startsWith('www.')) {
                    return netloc.slice(4);
                }
                return netloc;
            } catch {
                return "";
            }
        }

        /**
         * Xabarni ko'rsatish funksiyasi.
         * @param {string} text - Xabar matni
         * @param {string} type - 'info', 'success', 'error'
         */
        function displayMessage(text, type) {
            let icon, border, bg;

            switch(type) {
                case 'error':
                    bg = 'bg-red-900/40 text-red-300';
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" /></svg>`;
                    border = 'border-red-500';
                    break;
                case 'info':
                    bg = 'bg-blue-900/40 text-blue-300';
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-blue-500" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" /></svg>`;
                    border = 'border-blue-500';
                    break;
                case 'success':
                default:
                    bg = 'bg-green-900/40 text-green-300';
                    icon = `<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" /></svg>`;
                    border = 'border-green-500';
            }

            messageArea.innerHTML = `
                <div class="flex items-center p-4 rounded-lg border-l-4 ${bg} ${border} shadow-md">
                    ${icon}
                    <p class="ml-3 text-sm font-medium">${text}</p>
                </div>
            `;
        }

        /**
         * Progress barni yangilash funksiyasi.
         * @param {number} percent - Foiz (0-100)
         * @param {string} statusText - Status matni
         */
        function updateProgress(percent, statusText) {
            progressBar.style.width = `${percent}%`;
            progressStatus.textContent = statusText;
        }


        /**
         * Yuklab olish progressini tekshirish uchun polling.
         * @param {string} taskId - Vazifa IDsi
         */
        async function pollProgress(taskId) {
            const interval = setInterval(async () => {
                try {
                    const response = await fetch(`${CHECK_STATUS_ENDPOINT}/${taskId}`);
                    const data = await response.json();

                    if (data.status === 'processing') {
                        const progress = data.progress || 0;
                        updateProgress(progress, `Yuklanmoqda: ${progress}%`);

                    } else if (data.status === 'completed') {
                        clearInterval(interval);
                        updateProgress(100, "✅ Yuklab olish yakunlandi!");

                        // Natija kartochkasini to'ldirish
                        videoTitle.textContent = data.title;
                        finalDownloadLink.href = data.download_url;

                        // Fayl nomini belgilash
                        const safeFilename = data.filename ? data.filename.replace(/[^\w\s\.-]/g, '').trim() : 'video_yuklandi.mp4';
                        finalDownloadLink.setAttribute('download', safeFilename);

                        // UI ni yangilash
                        resultCard.classList.remove('hidden');
                        progressContainer.classList.add('hidden');
                        downloadButton.disabled = false;
                        downloadButton.innerHTML = "📥 Yuklab Olishni Boshlash";
                        displayMessage("✅ Fayl tayyorlandi! Yuklab olish tugmasini bosing.", 'success');

                    } else if (data.status === 'failed') {
                        clearInterval(interval);

                        // UI ni yangilash
                        progressContainer.classList.add('hidden');
                        downloadButton.disabled = false;
                        downloadButton.innerHTML = "📥 Yuklab Olishni Boshlash";
                        displayMessage(`❌ Yuklab olishda xatolik: ${data.error}. Iltimos, havolani tekshiring.`, 'error');
                    }
                } catch (error) {
                    clearInterval(interval);
                    console.error('Polling xatosi:', error);
                    downloadButton.disabled = false;
                    downloadButton.innerHTML = "📥 Yuklab Olishni Boshlash";
                    displayMessage(`❌ Kutilmagan tarmoq xatosi.`, 'error');
                }
            }, 1000); // Har 1 soniyada tekshirish
        }


        /**
         * Yuklab olish jarayonini boshlaydi.
         */
        downloadButton.addEventListener('click', async () => {
            const url = videoUrlInput.value.trim();
            const domain = getBaseDomain(url);

            resultCard.classList.add('hidden');
            messageArea.innerHTML = '';
            progressContainer.classList.add('hidden'); // Avval yashirish

            if (!url) {
                displayMessage("⚠️ Iltimos, havolani kiritish maydonini to'ldiring.", 'error');
                return;
            }

            if (!ALLOWED_DOMAINS.some(allowed => domain.includes(allowed))) {
                displayMessage("❌ Faqat YouTube, TikTok va Instagram platformalari qo'llab-quvvatlanadi. Boshqa platforma havolasi kiritilgan.", 'error');
                return;
            }

            // UI ni yangilash
            downloadButton.disabled = true;
            downloadButton.innerHTML = `
                <span class="flex items-center justify-center">
                    <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                        <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                        <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    Yuklab olish vazifasi yaratilmoqda...
                </span>
            `;

            displayMessage("🚀 Vazifa boshlash so'rovi yuborildi. Kuting.", 'info');

            try {
                // 1. Vazifani boshlash (Task ID olish)
                const response = await fetch(START_TASK_ENDPOINT, {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ url: url }),
                });

                const data = await response.json();

                if (data.success && data.task_id) {
                    // Vazifa boshlandi. Progress barni ko'rsatamiz
                    progressContainer.classList.remove('hidden');
                    updateProgress(0, "Metadata olinmoqda va yuklanish boshlanadi...");
                    downloadButton.innerHTML = "🔄 Yuklab Olinmoqda...";

                    // 2. Progressni tekshirishni boshlash
                    pollProgress(data.task_id);

                } else {
                    // Xato javobi (Task ID olinmagan bo'lsa)
                    downloadButton.disabled = false;
                    downloadButton.innerHTML = "📥 Yuklab Olishni Boshlash";
                    displayMessage(`❌ Boshlash xatosi: ${data.error || 'Server javobi aniq emas'}.`, 'error');
                }

            } catch (error) {
                // Tarmoq yoki serverga ulanish xatosi
                console.error('Fetch error:', error);
                downloadButton.disabled = false;
                downloadButton.innerHTML = "📥 Yuklab Olishni Boshlash";
                displayMessage(`❌ Kutilmagan server xatosi yuz berdi. Iltimos, keyinroq urinib ko'ring.`, 'error');
            }
        });
    </script>
</body>
</html>
